version: 0.2

env:
  variables:
    NODE_OPTIONS: "--max_old_space_size=4096"
    NPM_CONFIG_PROGRESS: "false"
    NPM_CONFIG_AUDIT: "false"
    NPM_CONFIG_FUND: "false"

phases:
  install:
    runtime-versions:
      nodejs: latest
  pre_build:
    commands:
      - echo Logging in to Docker Hub...
      - echo "$DOCKER_HUB_ACCESS_TOKEN" | docker login --username "$DOCKER_HUB_USERNAME" --password-stdin
      - echo Logging in to Amazon ECR...
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
  build:
    commands:
      - echo Building the Docker image...
      - export DOCKER_BUILDKIT=1
      - docker build --build-arg BUILD_PREFIX="code:" --target bolt-ai-$IMAGE_TAG -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Update ECS service
      - aws ecs update-service --cluster $ECS_CLUSTER_NAME --service $ECS_SERVICE_NAME --force-new-deployment