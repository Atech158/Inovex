name: Prebuild for Render
on:
  workflow_dispatch:      # run manually if you want
  push:
    branches: [ main ]    # also run on pushes to main

permissions:
  contents: write         # allow this workflow to push to the repo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # we need history to push branches

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'     # ok even if the project uses pnpm

      - name: Increase Node memory
        run: echo "NODE_OPTIONS=--max-old-space-size=3072" >> $GITHUB_ENV

      - name: Install deps (npm or pnpm)
        run: |
          if [ -f pnpm-lock.yaml ]; then
            npm i -g pnpm
            pnpm install --no-frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci --legacy-peer-deps
          else
            npm install --legacy-peer-deps
          fi

      - name: Build (production)
        run: npm run build

      # Collect static assets into /dist no matter how the app outputs
      - name: Prepare static dist
        run: |
          rm -rf dist
          mkdir -p dist
          # most Vite apps already output to dist/
          if [ -d dist ]; then echo "dist exists from build"; fi
          # Remix client assets commonly land in build/client
          if [ -d build/client ]; then cp -R build/client/* dist/; fi
          # public assets
          if [ -d public ]; then cp -R public/* dist/ || true; fi
          if [ -d app/public ]; then cp -R app/public/* dist/ || true; fi
          # sanity check
          if [ ! -f dist/index.html ] && [ ! -f dist/200.html ]; then
            echo "WARNING: No index.html found yet; app may not be purely static."
          fi
          ls -la dist || true

      # Publish dist to a dedicated branch (render-build)
      - name: Publish dist to render-build branch
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git fetch origin
          # Create/replace an orphan-only-static branch
          git checkout --orphan render-build
          git reset
          rm -rf .
          mkdir -p dist
          # Bring in the dist we just built from previous checkout
          cp -R $GITHUB_WORKSPACE/dist ./dist
          git add dist
          git commit -m "build: static dist for Render [skip ci]" || true
          git push -f origin render-build


