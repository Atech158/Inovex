name: Backfill Since Last Release

on:
  workflow_dispatch:   # Run manually from Actions tab

permissions:
  contents: read
  issues: read
  pull-requests: read
  repository-projects: write

jobs:
  backfill:
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq
      - name: Authenticate gh
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      - name: Get Last Release Date
        id: release
        run: |
          gh release list --repo ${{ github.repository }} --limit 1 --json tagName,publishedAt > release.json
          cat release.json
          echo "release_date=$(jq -r '.[0].publishedAt' release.json)" >> $GITHUB_ENV
      - name: Get Open Issues Since Release
        run: |
          gh issue list                     --repo ${{ github.repository }}                     --state open                     --json url,createdAt                     --limit 500 > issues.json
          jq --arg cutoff "${{ env.release_date }}" '[.[] | select(.createdAt > $cutoff)]' issues.json > issues_filtered.json
          cat issues_filtered.json
      - name: Get Open PRs Since Release
        run: |
          gh pr list                     --repo ${{ github.repository }}                     --state open                     --json url,createdAt                     --limit 500 > prs.json
          jq --arg cutoff "${{ env.release_date }}" '[.[] | select(.createdAt > $cutoff)]' prs.json > prs_filtered.json
          cat prs_filtered.json
      - name: Add Issues to Project
        run: |
          for url in $(jq -r '.[].url' issues_filtered.json); do
            gh project item-add ${{ vars.PROJECT_ID }} --url "$url"
          done
      - name: Add PRs to Project
        run: |
          for url in $(jq -r '.[].url' prs_filtered.json); do
            gh project item-add ${{ vars.PROJECT_ID }} --url "$url"
          done
